# Default values for ja-shortener
replicaCount: 1

image:
  repository: cr0hn/ja-shortener
  pullPolicy: IfNotPresent
  tag: "latest"

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

serviceAccount:
  create: true
  annotations: {}
  name: ""

podAnnotations: {}

podSecurityContext: {}

securityContext: {}

service:
  type: ClusterIP
  port: 8080

ingress:
  enabled: false
  className: ""
  annotations: {}
  host: "chart-example.local"
  hosts:
    - host: chart-example.local
      paths:
        - path: /
          pathType: ImplementationSpecific
  tls: []

traefik:
  enabled: false
  entryPoints:
    web: true
    websecure: true
  tls: []

resources:
  limits:
    cpu: 1000m
    memory: 1Gi
  requests:
    cpu: 500m
    memory: 512Mi

autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80
  targetMemoryUtilizationPercentage: 80

nodeSelector: {}

tolerations: []

affinity: {}

# Django application configuration
django:
  # Django secret key
  secretKey: "change-me-in-production"
  
  # Debug mode
  debug: false
  
  # Allowed hosts
  allowedHosts: "*"
  
  # CSRF trusted origins
  csrfTrustedOrigins: "http://localhost"
  
  # Health check path
  healthPath: "health/"
  
  # Admin configuration
  admin: 
    url: "admin/"
    username: "admin"
    email: "admin@example.com"
    password: "change-me-in-production"
  
  # Gunicorn configuration
  gunicorn:
    workers: 5
    logLevel: "INFO"
  
  # Sentry configuration
  sentry:
    enabled: false
    dsn: ""
  
  # Backup configuration
  backup:
    enabled: false
    type: "s3"  # or "local"
    schedule: "0 2 * * *"  # Daily at 2 AM
    successfulJobsHistoryLimit: 3
    failedJobsHistoryLimit: 1
    restartPolicy: "OnFailure"
    backoffLimit: 3
    s3:
      accessKey: ""
      secretKey: ""
      bucketName: ""
      region: ""
      endpointUrl: ""
    local:
      location: "/data/backups"

# Database Configuration
# By default, the chart deploys an internal PostgreSQL database.
# To use an external database, set postgresql.enabled = false and configure externalDatabase.

# Internal PostgreSQL (default)
postgresql:
  enabled: true
  auth:
    database: ja_shortener
    username: ja_shortener
    password: ja_shortener_password
  primary:
    persistence:
      enabled: true
      size: 10Gi
  service:
    ports:
      postgresql: 5432

# External Database Configuration
# Use this when you want to connect to an existing database (AWS RDS, Google Cloud SQL, etc.)
externalDatabase:
  enabled: false
  type: "postgresql"  # postgresql, mysql, sqlite
  host: ""
  port: 5432
  database: ""
  username: ""
  password: ""
  # Full DATABASE_DSN (overrides above settings if provided)
  dsn: ""

# Redis Configuration
# By default, the chart deploys an internal Redis instance.
# To use an external Redis, set redis.enabled = false and configure externalRedis.

# Internal Redis (default)
redis:
  enabled: false
  auth:
    password: redis_password
  master:
    persistence:
      enabled: true
      size: 5Gi
  service:
    ports:
      redis: 6379

# External Redis Configuration
# Use this when you want to connect to an existing Redis (AWS ElastiCache, etc.)
externalRedis:
  enabled: false
  host: ""
  port: 6379
  password: ""
  database: 0
  # Full REDIS_DSN (overrides above settings if provided)
  dsn: "" 